# Generated by Django 3.0.1 on 2020-04-16 08:38

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllBatches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_no', models.CharField(max_length=20)),
                ('batch_name_suffix', models.CharField(max_length=20)),
                ('no_of_students', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='AllLectureHalls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hall_number', models.CharField(max_length=224)),
                ('hall_name', models.CharField(max_length=224)),
                ('hall_capacity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='AllSemesters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester_no', models.CharField(max_length=20)),
                ('semester_name_suffix', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='AllSubjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_code', models.CharField(max_length=100)),
                ('subject_name', models.CharField(max_length=224)),
                ('related_batch', models.CharField(choices=[('1', '1st Year'), ('2', '2nd Year'), ('3', '3rd Year'), ('4', '4th Year')], default=None, max_length=20)),
                ('semester', models.CharField(choices=[('1', 'Semester I'), ('2', 'Semester II')], default=None, max_length=20)),
                ('related_lecturer', models.CharField(default='', max_length=224)),
                ('std_count', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_no', models.CharField(max_length=50)),
                ('no_of_students', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Days',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days', models.CharField(max_length=150)),
                ('batch', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lecturer_name', models.CharField(max_length=100)),
                ('batch', models.IntegerField(choices=[('1', '1st Year'), ('2', '2nd Year'), ('3', '3rd Year'), ('4', '4th Year')])),
                ('hall', models.IntegerField(choices=[('NLH', 'NLH'), ('204', '204'), ('104', '104'), ('cis1', 'CIS Lab 1'), ('cis2', 'CIS Lab 2')])),
                ('subject', models.CharField(max_length=50)),
                ('students', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Profiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=224)),
                ('user_profile_img', models.ImageField(blank=True, null=True, upload_to='users/')),
            ],
        ),
        migrations.CreateModel(
            name='TimeSlots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_slot', models.CharField(max_length=100)),
                ('batch', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_title', models.CharField(choices=[('Prof', 'Prof'), ('Dr', 'Dr'), ('Mr', 'Mr'), ('Mrs', 'Mrs'), ('Miss', 'Miss')], default=None, max_length=30)),
                ('first_name', models.CharField(default=None, max_length=224)),
                ('last_name', models.CharField(default=None, max_length=224)),
                ('lecturer_name', models.CharField(default=None, max_length=224)),
                ('email', models.EmailField(max_length=254)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('lecturer_code', models.CharField(max_length=224)),
                ('user_position', models.CharField(choices=[('lecturer', 'Lecturer'), ('demo', 'Demonstrator'), ('naStaff', 'Non Acedamic Staff'), ('other', 'Other')], default=None, max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
